// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using shifts.Models;

#nullable disable

namespace shifts.Migrations
{
    [DbContext(typeof(ShiftsContext))]
    [Migration("20230521045815_MedicMedicalSpecialityMigration")]
    partial class MedicMedicalSpecialityMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("shifts.Models.Medic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("ScheduleFrom")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScheduleUntil")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Medic", (string)null);
                });

            modelBuilder.Entity("shifts.Models.MedicMedicalSpeciality", b =>
                {
                    b.Property<int>("IdMedic")
                        .HasColumnType("int");

                    b.Property<int>("IdMedicalSpeciality")
                        .HasColumnType("int");

                    b.HasKey("IdMedic", "IdMedicalSpeciality");

                    b.HasIndex("IdMedicalSpeciality");

                    b.ToTable("MedicMedicalSpeciality", (string)null);
                });

            modelBuilder.Entity("shifts.Models.MedicalSpeciality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("MedicalSpecialities", (string)null);
                });

            modelBuilder.Entity("shifts.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Patients", (string)null);
                });

            modelBuilder.Entity("shifts.Models.MedicMedicalSpeciality", b =>
                {
                    b.HasOne("shifts.Models.Medic", "Medic")
                        .WithMany("MedicMedicalSpecialities")
                        .HasForeignKey("IdMedic")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("shifts.Models.MedicalSpeciality", "MedicalSpeciality")
                        .WithMany("MedicMedicalSpecialities")
                        .HasForeignKey("IdMedicalSpeciality")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medic");

                    b.Navigation("MedicalSpeciality");
                });

            modelBuilder.Entity("shifts.Models.Medic", b =>
                {
                    b.Navigation("MedicMedicalSpecialities");
                });

            modelBuilder.Entity("shifts.Models.MedicalSpeciality", b =>
                {
                    b.Navigation("MedicMedicalSpecialities");
                });
#pragma warning restore 612, 618
        }
    }
}
